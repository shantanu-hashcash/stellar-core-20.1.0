[common]
version = 2
build_flags = []

# Import some predefined API groups that cackle supports. These are
# equivalent to defining `[api.net]` and `[api.fs]` and so on, but
# are baked-in to cackle.
import_std =  ["net", "fs", "env", "process", "terminate"]

# Define a few more API groups we want to be concerned with the use
# of: those that risk nondeterminism in the program.
[api.time]
include = [
    "std::time",
]

[api.hash]
include = [
    "core::hash",
    "std::collections::HashMap",
    "std::collections::hash",
    "std::sys::unix::rand::hashmap_random_keys",
    "hashbrown::raw",
]

[api.rand]
include = [
    "rand",
    "rand_core"
]
exclude = [
    "rand::distributions",
    "rand::seq",
]

[api.thread]
include = [
    "std::thread",
]
no_auto_detect = [
    "syn",
]

[api.env]
no_auto_detect = [
    "soroban-env-common",
]

[pkg.thiserror-impl]
allow_proc_macro = true
allow_apis = [
    "hash",
]

[pkg.wasm-bindgen-macro]
allow_proc_macro = true

[pkg.soroban-builtin-sdk-macros]
allow_proc_macro = true

[pkg.paste]
allow_proc_macro = true
build.allow_apis = [
    "process",
]
allow_apis = [
    "env",
]

[pkg.num-derive]
allow_proc_macro = true

[pkg.serde_derive]
allow_proc_macro = true
allow_apis = [
    "hash",
    "thread",
]

[pkg.curve25519-dalek-derive]
allow_proc_macro = true
allow_unsafe = true

[pkg.soroban-env-macros]
allow_proc_macro = true
allow_apis = [
    "env",
    "fs",
]

[pkg.rand]
allow_unsafe = true

[pkg.rand_chacha]
allow_unsafe = true
from.test.allow_apis = [
    "rand",
]

[pkg.soroban-env-host]
allow_unsafe = true
build.allow_apis = [
    "env",
]

[pkg.unicode-ident]
allow_unsafe = true

[pkg.itoa]
allow_unsafe = true

[pkg.subtle]
allow_unsafe = true

[pkg.zeroize]
allow_unsafe = true

[pkg.cpufeatures]
allow_unsafe = true

[pkg.static_assertions]
allow_unsafe = true

[pkg.ryu]
allow_unsafe = true

[pkg.either]
allow_unsafe = true

[pkg.spin]
allow_unsafe = true

[pkg.wasmi_arena]
allow_unsafe = true

[pkg.base16ct]
allow_unsafe = true

[pkg.percent-encoding]
allow_unsafe = true

[pkg.smallvec]
allow_unsafe = true

[pkg.once_cell]
allow_unsafe = true

[pkg.ppv-lite86]
allow_unsafe = true

[pkg.keccak]
allow_unsafe = true

[pkg.hashbrown]
allow_unsafe = true

[pkg.ethnum]
allow_unsafe = true

[pkg.unicode-bidi]
allow_unsafe = true

[pkg.unicode-normalization]
allow_unsafe = true

[pkg.cc]
allow_unsafe = true
from.build.allow_apis = [
    "env",
    "fs",
    "hash",
    "process",
    "terminate",
    "thread",
]

[pkg.wasmparser-nostd]
allow_unsafe = true

[pkg.form_urlencoded]
allow_unsafe = true

[pkg.libm]
build.allow_apis = [
    "env",
]
allow_unsafe = true

[pkg.platforms]
build.allow_apis = [
    "env",
]

[pkg.serde_json]
build.allow_apis = [
    "env",
    "process",
]
allow_unsafe = true

[pkg.serde]
build.allow_apis = [
    "env",
    "process",
]
allow_unsafe = true

[pkg.quote]
build.allow_apis = [
    "env",
    "process",
    "terminate",
]

[pkg.semver]
build.allow_apis = [
    "env",
    "process",
]
allow_unsafe = true

[pkg.proc-macro2]
build.allow_apis = [
    "env",
    "process",
]
allow_unsafe = true
allow_apis = [
    "terminate",
]

[pkg.thiserror]
build.allow_apis = [
    "env",
    "fs",
    "process",
]

[pkg.memchr]
allow_unsafe = true

[pkg.libc]
build.allow_apis = [
    "env",
    "process",
]
allow_unsafe = true

[pkg.version_check]
from.build.allow_apis = [
    "env",
    "process",
]

[pkg.typenum]
build.allow_apis = [
    "env",
    "fs",
]

[pkg.num-traits]
build.allow_apis = [
    "env",
]
allow_unsafe = true

[pkg.autocfg]
from.build.allow_apis = [
    "env",
    "fs",
    "process",
]

[pkg.indexmap]
build.allow_apis = [
    "env",
]
allow_unsafe = true
from.test.allow_apis = [
    "hash",
]

[pkg.getrandom]
allow_unsafe = true

[pkg.generic-array]
allow_unsafe = true

[pkg.num-integer]
build.allow_apis = [
    "env",
]

[pkg.block-buffer]
allow_unsafe = true

[pkg.rand_core]
allow_unsafe = true

[pkg.rustc_version]
from.build.allow_apis = [
    "env",
    "hash",
    "process",
]

[pkg.sha2]
allow_unsafe = true

[pkg.curve25519-dalek]
build.allow_apis = [
    "env",
]
allow_unsafe = true

[pkg.crypto-bigint]
allow_unsafe = true

[pkg.syn]
allow_unsafe = true
allow_apis = [
    "thread",
]

[pkg.soroban-wasmi]
allow_unsafe = true

[pkg.wasmparser]
allow_unsafe = true
from.test.allow_apis = [
    "hash",
]

[pkg.crate-git-revision]
from.build.allow_apis = [
    "env",
    "fs",
    "process",
]

[pkg.soroban-env-common]
allow_unsafe = true

[pkg.derive_arbitrary]
allow_proc_macro = true

[pkg.arbitrary]
allow_unsafe = true

[pkg.itertools]
allow_unsafe = true

[pkg.cxxbridge-macro]
allow_proc_macro = true
allow_apis = [
    "hash",
]
allow_unsafe = true

[pkg.tracy-client-sys]
allow_unsafe = true

[pkg.log]
allow_unsafe = true

[pkg.fixedbitset]
allow_unsafe = true

[pkg.rustc-simple-version]
allow_apis = [
    "process",
]

[pkg.winnow]
allow_unsafe = true

[pkg.link-cplusplus]
build.allow_apis = [
    "env",
    "fs",
]

[pkg.cxx]
allow_apis = [
    "env",
    "fs",
    "process",
]
allow_unsafe = true

[pkg.petgraph]
allow_unsafe = true

[pkg.toml_edit]
allow_unsafe = true

[pkg.stellar-core]
allow_unsafe = true
test.allow_apis = [
    "rand",
]
